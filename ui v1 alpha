-- settings
local settings = {
	fullbright = false;
	superjump = false;
	superspeed = false;
	on = Color3.fromRGB(221, 3, 255);
	off = Color3.fromRGB(255,255,255);
	visualopen = true;
	characteropen = true;
	vfly = false;
	noclip = false;
	testopen = true;
	TracersEnabled = false, 
  	TracersLength = 500, 
 	PlaceTracersUnderCharacter = false,
  	CHAMSEnabled = false,
	CHAMSLength = 500,
	MobChams = false,
	CHAMSEnabled = false;
	Blacklist = { },
  	FriendList = { },
  	Colors = {
	    Enemy = Color3.new(1, 0, 0),
	    Ally = Color3.new(0, 1, 0),
	    Friend = Color3.new(1, 1, 0),
	    Neutral = Color3.new(1, 1, 1),
	    Crosshair = Color3.new(1, 0, 0),
	    ColorOverride = nil,
  	},
  	CharAddedEvent = { },
	Mob_ESP_CHAMS_Ran_Once = false,
};
local coloursettings = {
	linecolor = Color3.fromRGB(221, 3, 255);
	togglebuttoncolor = Color3.fromRGB(35, 35, 35);
	buttoncolor = Color3.fromRGB(35, 35, 35);
	labelcolor = Color3.fromRGB(35, 35, 35);
	hotkeybuttoncolor = Color3.fromRGB(35, 35, 35);
};
function GetCamera()
	return workspace:FindFirstChildOfClass("Camera")
end

local mouse = game.Players.LocalPlayer:GetMouse();
local TweenService = game:GetService("TweenService")
local Plrs = game.Players
local MyPlr = Plrs.LocalPlayer
local MyChar = MyPlr.Character
local MyMouse = MyPlr:GetMouse()
local MyCam = GetCamera()
local char = game.Players.LocalPlayer.Character
local Plrs = game:GetService("Players")
local Run = game:GetService("RunService")
local CoreGui = game:GetService("CoreGui")
local StartGui = game:GetService("StarterGui")
local Teams = game:GetService("Teams")
local UserInput = game:GetService("UserInputService")
local Light = game:GetService("Lighting")
local HTTP = game:GetService("HttpService")
local RepStor = game:GetService("ReplicatedStorage")
local MyCam = GetCamera()
if MyCam == nil then
	return
end
local Tracers = Instance.new("Folder", MyCam)
	Tracers.Name = "Tracers"
	local TracerData = { }
	local TracerMT = setmetatable(TracerData, {
		__newindex = function(tab, index, val)
			rawset(tab, index, val)
		end
})

local ChamsFolder = Instance.new("Folder", CoreGui)
ChamsFolder.Name = "Chams"
local PlayerChams = Instance.new("Folder", ChamsFolder)
PlayerChams.Name = "PlayerChams"
local ItemChams = Instance.new("Folder", ChamsFolder)
ItemChams.Name = "ItemChams"
local function Tween(Object, Property, Style, Direction, Time)
    return TweenService:Create(Object, TweenInfo.new(Time, Enum.EasingStyle[Style], Enum.EasingDirection[Direction]), Property):Play()
end

function createtemplates()
	warn("starting menu");
	warn("creating ui");
	local ui = Instance.new("ScreenGui",game.Players.LocalPlayer.PlayerGui);
	ui.Name = "Vect0rs hub";
	ui.ResetOnSpawn = false;
	print("successfully  created "..ui.Name.. "'s ui!");
	warn("creating mainframe");
	local mainframe = Instance.new("Frame", ui);
	mainframe.Name = "mainframe";
	mainframe.Size = UDim2.new(0, 1655,0, 804);
	mainframe.Position = UDim2.new(0.15, 0,0.013, 0)
	mainframe.BackgroundTransparency = 1;
	local uilistlayout = Instance.new("UIListLayout", mainframe)
	uilistlayout.FillDirection = "Horizontal"
	uilistlayout.Padding = UDim.new(0,10)
	print("successfully  created mainframe!");
	warn("creating folders");
	local windowsfolder = Instance.new("Folder", ui);
	windowsfolder.Name = "Windows"
	local templatesfolder = Instance.new("Folder", ui);
	templatesfolder.Name = "Templates";
	local optionsfolder = Instance.new("Folder", ui);
	optionsfolder.Name = "Options";
	print("successfully  created folders!")
	-- creation of frame templates --
	warn("creating templates")
	
	-- button template
	local buttontemplateframe = Instance.new("Frame",templatesfolder);
	buttontemplateframe.Name = "Template Button";
	buttontemplateframe.BackgroundColor3 = Color3.fromRGB(35,35,35);
	buttontemplateframe.Position = UDim2.new(0.019, 0,0.132, 0);
	buttontemplateframe.Size = UDim2.new(0, 271,0, 31);
	buttontemplateframe.Visible = false;
	buttontemplateframe.BorderSizePixel = 0;
	local buttontemplatebutton = Instance.new("TextButton", buttontemplateframe);
	buttontemplatebutton.Name = "Button";
	buttontemplatebutton.BackgroundTransparency = 1;
	buttontemplatebutton.Position = UDim2.new(0.027,0,0,0);
	buttontemplatebutton.Size = UDim2.new(0,263,0,30);
	buttontemplatebutton.TextColor3 = Color3.fromRGB(255,255,255)
	buttontemplatebutton.TextSize = 17
	buttontemplatebutton.Font = "SourceSans"
	buttontemplatebutton.TextXAlignment = "Left"
	
	-- label template
	local labeltemplateframe = Instance.new("Frame",templatesfolder);
	labeltemplateframe.Name = "Template Label";
	labeltemplateframe.BackgroundColor3 = Color3.fromRGB(35,35,35);
	labeltemplateframe.Position = UDim2.new(0.019, 0,0.132, 0);
	labeltemplateframe.Size = UDim2.new(0, 271,0, 31);
	labeltemplateframe.Visible = false;
	labeltemplateframe.BorderSizePixel = 0;
	local labeltemplatelabel = Instance.new("TextLabel", labeltemplateframe);
	labeltemplatelabel.Name = "Label";
	labeltemplatelabel.BackgroundTransparency = 1;
	labeltemplatelabel.Position = UDim2.new(0.027,0,0,0);
	labeltemplatelabel.Size = UDim2.new(0,262,0,30);
	labeltemplatelabel.TextColor3 = Color3.fromRGB(255,255,255);
	labeltemplatelabel.TextSize = 17;
	labeltemplatelabel.Font = "SourceSans"
	labeltemplatelabel.TextXAlignment = "Left"
	
	-- toggle button template
	local togglebuttontemplateframe = Instance.new("Frame",templatesfolder);
	togglebuttontemplateframe.Name = "Template Toggle Button";
	togglebuttontemplateframe.BackgroundColor3 = Color3.fromRGB(35,35,35);
	togglebuttontemplateframe.Position = UDim2.new(0.019, 0,0.132, 0);
	togglebuttontemplateframe.Size = UDim2.new(0, 271,0, 31);
	togglebuttontemplateframe.Visible = false;
	togglebuttontemplateframe.BorderSizePixel = 0;
	local labeltemplatelabel = Instance.new("TextLabel", togglebuttontemplateframe);
	labeltemplatelabel.Name = "Name";
	labeltemplatelabel.BackgroundTransparency = 1;
	labeltemplatelabel.Position = UDim2.new(0.027,0,0,0);
	labeltemplatelabel.Size = UDim2.new(0, 218,0, 30);
	labeltemplatelabel.TextColor3 = Color3.fromRGB(255,255,255);
	labeltemplatelabel.TextSize = 17;
	labeltemplatelabel.Font = "SourceSans";
	labeltemplatelabel.TextXAlignment = "Left"
	local buttontemplatebutton = Instance.new("TextButton", togglebuttontemplateframe);
	buttontemplatebutton.Name = "Toggle";
	buttontemplatebutton.Text = "OFF";
	buttontemplatebutton.BackgroundTransparency = 1;
	buttontemplatebutton.Position = UDim2.new(0.838, 0,0, 0);
	buttontemplatebutton.Size = UDim2.new(0, 44,0, 30);
	buttontemplatebutton.TextColor3 = Color3.fromRGB(255,255,255);
	buttontemplatebutton.TextSize = 17;
	buttontemplatebutton.Font = "SourceSans";
	buttontemplatebutton.TextXAlignment = "Left"
	
	-- multiple options template
	local multipleoptionstemplateframe = Instance.new("Frame", templatesfolder);
	multipleoptionstemplateframe.Name = "Template Multiple options";
	multipleoptionstemplateframe.BackgroundColor3 = Color3.fromRGB(18,18,18);
	multipleoptionstemplateframe.Position = UDim2.new(0, 0,0, 0);
	multipleoptionstemplateframe.Size = UDim2.new(0, 271,0, 619);
	multipleoptionstemplateframe.BackgroundTransparency = 1;
	multipleoptionstemplateframe.Visible = false;
	local uilistlayout = Instance.new("UIListLayout", multipleoptionstemplateframe);
	local options = Instance.new("Frame", multipleoptionstemplateframe);
	options.Name = "Options";
	options.Size = UDim2.new(0, 271,0, 258);
	options.BackgroundTransparency = 1;
	options.ClipsDescendants = true;
	local uilistlayout = Instance.new("UIListLayout", options)
	uilistlayout.SortOrder = "Name"
	local namee = Instance.new("TextLabel", multipleoptionstemplateframe);
	namee.Size = UDim2.new(0, 271,0, 31);
	namee.Name = "Namee";
	namee.BackgroundColor3 = Color3.fromRGB(18, 18, 18);
	namee.TextColor3 = Color3.fromRGB(255,255,255);
	namee.Font = "SourceSansBold";
	namee.TextSize = 18
	namee.TextXAlignment = "Left";
	local toggle = Instance.new("TextButton", namee);
	toggle.TextSize = 25
	toggle.Name = "toggle"
	toggle.Text = "-"
	toggle.TextColor3 = Color3.fromRGB(255,255,255);
	toggle.BackgroundTransparency = 1;
	toggle.Position = UDim2.new(0.834, 0,-0.161, 0);
	toggle.Size = UDim2.new(0, 44,0, 41);
	toggle.Font = "SourceSans";
	
	-- slider template
	local slidertemplateframe = Instance.new("Frame", templatesfolder);
	slidertemplateframe.BackgroundColor3 = Color3.fromRGB(35, 35, 35);
	slidertemplateframe.Size = UDim2.new(0, 271,0, 35);
	slidertemplateframe.BorderSizePixel = 0;
	slidertemplateframe.Name = "Template Slider";
	slidertemplateframe.Visible = false;
	local line = Instance.new("Frame", slidertemplateframe);
	line.Size = UDim2.new(0, 130,0, 2);
	line.Position = UDim2.new(0.52, 0,0.451, 0);
	line.BackgroundColor3 = Color3.fromRGB(221, 3, 255);
	line.BorderSizePixel = 1;
	local scroller = Instance.new("ScrollingFrame", slidertemplateframe);
	scroller.Name = "Scroller"
	scroller.BackgroundTransparency = 1;
	scroller.BorderSizePixel = 0;
	scroller.Position = UDim2.new(0.494, 0,0, 0);
	scroller.Size = UDim2.new(0, 144,0, 24);
	scroller.CanvasSize = UDim2.new(0, 5000,0, 0);
	scroller.ScrollBarImageColor3 = Color3.fromRGB(221, 3, 255);
	scroller.ScrollBarThickness = 12;
	scroller.VerticalScrollBarInset = "None";
	local namee = Instance.new("TextLabel", slidertemplateframe);
	namee.Name = "Namee";
	namee.BackgroundTransparency = 1;
	namee.BorderSizePixel = 0;
	namee.TextSize = 15;
	namee.TextColor3 = Color3.fromRGB(255,255,255);
	namee.Size = UDim2.new(0, 63,0, 18);
	namee.Position = UDim2.new(0.022, 0,0.2, 0);
	namee.Font = "SourceSans";
	namee.TextXAlignment = "Left"
	local value = Instance.new("TextLabel", slidertemplateframe);
	value.Name = "Value";
	value.BackgroundTransparency = 1;
	value.Size = UDim2.new(0, 33,0, 18);
	value.Position = UDim2.new(0.699, 0,0.214, 0);
	value.BorderSizePixel = 0;
	value.TextSize = 18;
	value.TextColor3 = Color3.fromRGB(255,255,255);
	value.Font = "SourceSansBold";
	value.Text = "0";
	local value2 = Instance.new("TextLabel", slidertemplateframe);
	value2.Name = "Value2";
	value2.BackgroundTransparency = 1;
	value2.Size = UDim2.new(0, 41,0, 18);
	value2.Position = UDim2.new(0.28, 0,0.2, 0);
	value2.BorderSizePixel = 0;
	value2.TextSize = 15;
	value2.TextColor3 = Color3.fromRGB(255,255,255);
	value2.Text = "[0/0]"
	value2.Font = "SourceSans";
	
	
	
	-- window template
	local windowtemplateframe = Instance.new("Frame",templatesfolder);
	windowtemplateframe.Name = "Template Window";
	windowtemplateframe.BackgroundColor3 = Color3.fromRGB(35,35,35);
	windowtemplateframe.BackgroundTransparency = 1;
	windowtemplateframe.Position = UDim2.new(0,0,0,0);
	windowtemplateframe.Size = UDim2.new(0, 271,0, 480);
	windowtemplateframe.Visible = false;
	windowtemplateframe.BorderSizePixel = 0;
	windowtemplateframe.ClipsDescendants = true
	local selection = Instance.new("Frame", windowtemplateframe);
	selection.Name = "Selection";
	selection.BackgroundTransparency = 1;
	selection.Size = UDim2.new(0, 271,0, 130);
	selection.Position = UDim2.new(-0.004, 0,0.087, 0)
	local uilistlayout = Instance.new("UIListLayout", selection);
	uilistlayout.SortOrder = "LayoutOrder"
	local title = Instance.new("TextLabel", windowtemplateframe);
	title.Size = UDim2.new(0, 271,0, 41);
	title.Position = UDim2.new(-0.002, 0,-0.002, 0)
	title.BackgroundColor3 = Color3.fromRGB(35,35,35);
	title.BorderSizePixel = 0;
	title.Font = "SourceSansBold";
	title.TextSize = 18;
	title.TextColor3 = Color3.fromRGB(255,255,255);
	title.Name = "Title";
	local line = Instance.new("ImageLabel", windowtemplateframe);
	line.Size = UDim2.new(0, 270,0, 2);
	line.Position = UDim2.new(0.001, 0,0.083, 0)
	line.Image = "";
	line.BackgroundColor3 = Color3.fromRGB(185, 20, 255);
	line.Name = "Line"
	local togglebutton = Instance.new("TextButton", title);
	togglebutton.Name = "toggle"
	togglebutton.BackgroundTransparency = 1;
	togglebutton.Font = "SourceSans";
	togglebutton.TextSize = 25;
	togglebutton.Text = "-";
	togglebutton.TextColor3 = Color3.fromRGB(255,255,255)
	togglebutton.Size = UDim2.new(0, 44,0, 41);
	togglebutton.Position = UDim2.new(0.838, 0,0, 0);
	print("successfully created templates!");
	print("menu successfully started!");
end;

function createuioptions()
warn("creating ui options");
	-- main shit
local visuals=Instance.new("Folder", game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Windows)
visuals.Name="Visuals"
local character=Instance.new("Folder", game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Windows)
character.Name="Character"


-- visual options
local visualsoptions=Instance.new("Folder", game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Options)
visualsoptions.Name = "Visuals Options"
local visualstogglebuttonoptions=Instance.new("Folder", visualsoptions)
visualstogglebuttonoptions.Name = "Toggle Options"
local visualsbuttonoptions=Instance.new("Folder", visualsoptions)
visualsbuttonoptions.Name = "Button Options"
local visualslabeloptions=Instance.new("Folder", visualsoptions)
visualslabeloptions.Name = "Label Options"
local espoptions = Instance.new("Folder",visualsoptions)
espoptions.Name = "Esp options"
local espoptionsoptions = Instance.new("Folder",espoptions)
espoptionsoptions.Name = "ESP Options"
local espoptionstogglebuttonoptions=Instance.new("Folder", espoptionsoptions)
espoptionstogglebuttonoptions.Name = "Toggle Options"
local espoptionsbuttonoptions=Instance.new("Folder", espoptionsoptions)
espoptionsbuttonoptions.Name = "Button Options"
local espoptionslabeloptions=Instance.new("Folder", espoptionsoptions)
espoptionslabeloptions.Name = "Label Options"
local espoptionsslideroptions = Instance.new("Folder",espoptionsoptions);
espoptionsslideroptions.Name = "Slider Options"
-- character options
local characteroptions=Instance.new("Folder", game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Options)
characteroptions.Name = "Character Options"
local charactertogglebuttonoptions=Instance.new("Folder", characteroptions)
charactertogglebuttonoptions.Name = "Toggle Options"
local characterbuttonoptions=Instance.new("Folder", characteroptions)
characterbuttonoptions.Name = "Button Options"
local characterlabeloptions=Instance.new("Folder", characteroptions)
characterlabeloptions.Name = "Label Options"
local characterslideroptions = Instance.new("Folder",characteroptions);
characterslideroptions.Name = "Slider Options"


function setupui()
	-- actual window tabs
	for i,v in pairs(game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Windows:GetChildren()) do
		local window = game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Templates['Template Window']:Clone();
		window.Parent=game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe;
		window.Visible=true;
		window.Name=v.Name;
		window:WaitForChild("Title").Text=v.Name;
	end
	-- multiple options in a tab
	
	-- visuals
	for i,v in pairs(visualstogglebuttonoptions:GetChildren()) do
		local togglebutton = game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Templates["Template Toggle Button"]:Clone();
		togglebutton.Parent=game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection;
		togglebutton.Visible=true;
		togglebutton.Name=v.Name;
		togglebutton:WaitForChild("Name").Text=v.Name;
	end
	for i,v in pairs(visualsbuttonoptions:GetChildren()) do
		local button = game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Templates["Template Button"]:Clone();
		button.Parent=game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection;
		button.Visible=true;
		button.Name=v.Name;
		button:WaitForChild("Button").Text=v.Name;
	end
	for i,v in pairs(visualslabeloptions:GetChildren()) do
		local button = game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Templates["Template Label"]:Clone();
		button.Parent=game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection;
		button.Visible=true;
		button.Name=v.Name;
		button:WaitForChild("Label").Text=v.Name;
	end
	for i,v in pairs(espoptions:GetChildren()) do
		local button = game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Templates["Template Multiple options"]:Clone();
		button.Parent=game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection;
		button.Visible=true;
		button.Name=v.Name;
		button.Namee.Text = v.Name; 
	end
	for i,v in pairs(espoptionstogglebuttonoptions:GetChildren()) do
		local togglebutton = game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Templates["Template Toggle Button"]:Clone();
		togglebutton.Parent=game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"].Options;
		togglebutton.Visible=true;
		togglebutton.Name=v.Name;
		togglebutton:WaitForChild("Name").Text=v.Name;
	end
	for i,v in pairs(espoptionslabeloptions:GetChildren()) do
		local togglebutton = game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Templates["Template Label"]:Clone();
		togglebutton.Parent=game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"].Options;
		togglebutton.Visible=true;
		togglebutton.Name=v.Name;
		togglebutton:WaitForChild("Name").Text=v.Name;
	end
	for i,v in pairs(espoptionsslideroptions:GetChildren()) do
		local togglebutton = game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Templates["Template Slider"]:Clone();
		togglebutton.Parent=game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"].Options;
		togglebutton.Visible=true;
		togglebutton.Name=v.Name;
		togglebutton:WaitForChild("Namee").Text=v.Name;
	end
	--chartacter
	for i,v in pairs(charactertogglebuttonoptions:GetChildren()) do
		local togglebutton = game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Templates["Template Toggle Button"]:Clone();
		togglebutton.Parent=game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection;
		togglebutton.Visible=true;
		togglebutton.Name=v.Name;
		togglebutton:WaitForChild("Name").Text=v.Name;
	end
	for i,v in pairs(characterbuttonoptions:GetChildren()) do
		local button = game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Templates["Template Button"]:Clone();
		button.Parent=game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection;
		button.Visible=true;
		button.Name=v.Name;
		button:WaitForChild("Button").Text=v.Name;
	end
	for i,v in pairs(characterlabeloptions:GetChildren()) do
		local button = game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Templates["Template Label"]:Clone();
		button.Parent=game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection;
		button.Visible=true;
		button.Name=v.Name;
		button:WaitForChild("Label").Text=v.Name;
	end
	for i,v in pairs(characterslideroptions:GetChildren()) do
		local button = game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].Templates["Template Slider"]:Clone();
		button.Parent=game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection;
		button.Visible=true;
		button.Name=v.Name;
		button:WaitForChild("Namee").Text = v.Name;
	end
end

--[[	--- options u can add ---
	-  Template Multiple options
	-  Template Button
	-  Template Label
	-  Template Toggle Button
	-  Template Window
	- Template Hotkey Button
	-
]]


--visuals
local fullbright = Instance.new("Folder", visualstogglebuttonoptions)
fullbright.Name = "FullBright"
local esp = Instance.new("Folder",espoptionstogglebuttonoptions)
esp.Name = "ESP"
local chams = Instance.new("Folder",espoptionstogglebuttonoptions)
chams.Name = "Chams"
local tracers = Instance.new("Folder", espoptionstogglebuttonoptions)
tracers.Name = "Tracers"
-- character
local superjump = Instance.new("Folder", charactertogglebuttonoptions)
superjump.Name = "Super Jump"
local superspeed = Instance.new("Folder", charactertogglebuttonoptions)
superspeed.Name = "Super Speed"
local fly = Instance.new("Folder", charactertogglebuttonoptions)
fly.Name = "Fly"
local vehiclefly = Instance.new("Folder", charactertogglebuttonoptions)
vehiclefly.Name = "Vehicle Fly"
local noclip = Instance.new("Folder", charactertogglebuttonoptions)
noclip.Name = "Noclip"
local walkspeed = Instance.new("Folder", characterslideroptions)
walkspeed.Name = "WalkSpeed"

setupui()

function tweening()
	if settings.visualopen then
		for index, visual in pairs(visual) do
		    if visual:IsA("Frame") then
				Tween(visual, {BackgroundTransparency = 0}, "Linear", "Out", .1) --these are just an examples
				wait(.1)
				visual.Visible = true
			end
		end		
		for index, visual in pairs(visual) do
		    if visual:IsA("TextButton") then
				Tween(visual, {TextTransparency = 0}, "Linear", "Out", .1) --these are just an examples
				visual.Visible = true
			end
		end	
		for index, visual in pairs(visual) do
		    if visual:IsA("TextLabel") then
				Tween(visual, {TextTransparency = 0}, "Linear", "Out", .1) --these are just an examples
				visual.Visible = true
			end
		end	
	else
			for index, visual in pairs(visual) do
		    if visual:IsA("Frame") then
				Tween(visual, {BackgroundTransparency = 1}, "Linear", "Out", .1) --these are just an examples
				wait(.1)
				visual.Visible = false
			end
		end		
		for index, visual in pairs(visual) do
		    if visual:IsA("TextButton") then
				Tween(visual, {TextTransparency = 1}, "Linear", "Out", .1) --these are just an examples
			end
		end	
		for index, visual in pairs(visual) do
		    if visual:IsA("TextLabel") then
				Tween(visual, {TextTransparency = 1}, "Linear", "Out", .1) --these are just an examples
			end
		end		
	end
		if settings.characteropen then
		for index, character in pairs(character) do
		    if character:IsA("Frame") then
				Tween(character, {BackgroundTransparency = 0}, "Linear", "Out", .1) --these are just an examples
				wait(.1)
				character.Visible = true
			end
		end		
		for index, character in pairs(character) do
		    if character:IsA("TextButton") then
				Tween(character, {TextTransparency = 0}, "Linear", "Out", .1) --these are just an examples
				character.Visible = true
			end
		end	
		for index, character in pairs(character) do
		    if character:IsA("TextLabel") then
				Tween(character, {TextTransparency = 0}, "Linear", "Out", .1) --these are just an examples
				character.Visible = true
			end
		end	
	else
			for index, character in pairs(character) do
		    if character:IsA("Frame") then
				Tween(character, {BackgroundTransparency = 1}, "Linear", "Out", .1) --these are just an examples
				wait(.1)
				character.Visible = false
			end
		end		
		for index, character in pairs(character) do
		    if character:IsA("TextButton") then
				Tween(character, {TextTransparency = 1}, "Linear", "Out", .1) --these are just an examples
			end
		end	
		for index, character in pairs(character) do
		    if character:IsA("TextLabel") then
				Tween(character, {TextTransparency = 1}, "Linear", "Out", .1) --these are just an examples
			end
		end		
	end
end
print("successfully created ui options!")
end;

function colourshit()
	game.Players.LocalPlayer.PlayerGui:WaitForChild("Vect0rs hub").Templates["Template Window"].Line.BackgroundColor3 = coloursettings.linecolor;
	game.Players.LocalPlayer.PlayerGui:WaitForChild("Vect0rs hub").Templates["Template Button"].BackgroundColor3 = coloursettings.buttoncolor;
	game.Players.LocalPlayer.PlayerGui:WaitForChild("Vect0rs hub").Templates["Template Toggle Button"].BackgroundColor3 = coloursettings.togglebuttoncolor;
	game.Players.LocalPlayer.PlayerGui:WaitForChild("Vect0rs hub").Templates["Template Label"].BackgroundColor3 = coloursettings.labelcolor;
	--game.Players.LocalPlayer.PlayerGui:WaitForChild("Vect0rs hub").Templates["Template Hotkey Button"].BackgroundColor3 = coloursettings.hotkeybuttoncolor;
end;

function mousebuttonscriptshit()
	-- script shit

-- functions
vflyspeed = 1
vehicleflyspeed = 1
function sFLY(vfly)
	repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer.Character and game.Players.LocalPlayer.Character:FindFirstChild('HumanoidRootPart') and game.Players.LocalPlayer.Character:FindFirstChild('Humanoid')
	repeat wait() until mouse

	local T = game.Players.LocalPlayer.Character.HumanoidRootPart
	local CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
	local lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
	local SPEED = 0

	local function FLY()
		settings.vfly = true
		local BG = Instance.new('BodyGyro', T)
		local BV = Instance.new('BodyVelocity', T)
		BG.P = 9e4
		BG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
		BG.cframe = T.CFrame
		BV.velocity = Vector3.new(0, 0, 0)
		BV.maxForce = Vector3.new(9e9, 9e9, 9e9)
		spawn(function()
			repeat wait()
			if not vfly then
				game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = true
			end
			if CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0 then
				SPEED = 50
			elseif not (CONTROL.L + CONTROL.R ~= 0 or CONTROL.F + CONTROL.B ~= 0 or CONTROL.Q + CONTROL.E ~= 0) and SPEED ~= 0 then
				SPEED = 0
			end
			if (CONTROL.L + CONTROL.R) ~= 0 or (CONTROL.F + CONTROL.B) ~= 0 or (CONTROL.Q + CONTROL.E) ~= 0 then
				BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (CONTROL.F + CONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(CONTROL.L + CONTROL.R, (CONTROL.F + CONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
				lCONTROL = {F = CONTROL.F, B = CONTROL.B, L = CONTROL.L, R = CONTROL.R}
			elseif (CONTROL.L + CONTROL.R) == 0 and (CONTROL.F + CONTROL.B) == 0 and (CONTROL.Q + CONTROL.E) == 0 and SPEED ~= 0 then
				BV.velocity = ((workspace.CurrentCamera.CoordinateFrame.lookVector * (lCONTROL.F + lCONTROL.B)) + ((workspace.CurrentCamera.CoordinateFrame * CFrame.new(lCONTROL.L + lCONTROL.R, (lCONTROL.F + lCONTROL.B + CONTROL.Q + CONTROL.E) * 0.2, 0).p) - workspace.CurrentCamera.CoordinateFrame.p)) * SPEED
			else
				BV.velocity = Vector3.new(0, 0, 0)
			end
			BG.cframe = workspace.CurrentCamera.CoordinateFrame
			until not settings.vfly
			CONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
			lCONTROL = {F = 0, B = 0, L = 0, R = 0, Q = 0, E = 0}
			SPEED = 0
			BG:destroy()
			BV:destroy()
			game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
		end)
	end
	mouse.KeyDown:connect(function(KEY)
		if KEY:lower() == 'w' then
			if vfly then
				CONTROL.F = vehicleflyspeed
			else
				CONTROL.F = vflyspeed
			end
		elseif KEY:lower() == 's' then
			if vfly then
				CONTROL.B = - vehicleflyspeed
			else
				CONTROL.B = - vflyspeed
			end
		elseif KEY:lower() == 'a' then
			if vfly then
				CONTROL.L = - vehicleflyspeed
			else
				CONTROL.L = - vflyspeed
			end
		elseif KEY:lower() == 'd' then
			if vfly then
				CONTROL.R = vehicleflyspeed
			else
				CONTROL.R = vflyspeed
            end
        elseif KEY:lower() == 'e' then
            if vfly then
                CONTROL.Q = vehicleflyspeed*2
            else
                CONTROL.Q = vflyspeed*2
            end
        elseif KEY:lower() == 'q' then
            if vfly then
                CONTROL.E = -vehicleflyspeed*2
            else
                CONTROL.E = -vflyspeed*2
            end
		end
	end)
	mouse.KeyUp:connect(function(KEY)
		if KEY:lower() == 'w' then
			CONTROL.F = 0
		elseif KEY:lower() == 's' then
			CONTROL.B = 0
		elseif KEY:lower() == 'a' then
			CONTROL.L = 0
		elseif KEY:lower() == 'd' then
            CONTROL.R = 0
        elseif KEY:lower() == 'e' then
            CONTROL.Q = 0
        elseif KEY:lower() == 'q' then
            CONTROL.E = 0
		end
	end)
	FLY()
end

function NOFLY()
	settings.vfly = false
	game.Players.LocalPlayer.Character:FindFirstChildOfClass('Humanoid').PlatformStand = false
end
	
function fullbright()
		if settings.fullbright then
		warn("fullbright enabled")
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["FullBright"].Toggle.Text = "ON"
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["FullBright"].Toggle.TextColor3 = settings.on
		local bloom = Instance.new("BloomEffect");
		bloom.Enabled = true;
		bloom.Intensity = 0.55;
		bloom.Size = 30;
		bloom.Threshold = 0.95;
		bloom.Parent = game.Lighting;
		local colorcorrection = Instance.new("ColorCorrectionEffect");
		colorcorrection.Enabled = true;
		colorcorrection.Brightness = 0;
		colorcorrection.Contrast = 0;
		colorcorrection.Saturation = 1;
		colorcorrection.TintColor = Color3.fromRGB(255,255,255);
		colorcorrection.Parent = game.Lighting;
		local sunrays = Instance.new("SunRaysEffect");
		sunrays.Enabled = true;
		sunrays.Intensity = 0.4;
		sunrays.Spread = 1;
		sunrays.Parent = game.Lighting;
		else
		warn("fullbright disabled")
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["FullBright"].Toggle.Text = "OFF"
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["FullBright"].Toggle.TextColor3 = settings.off
		for i,v in pairs(game.Lighting:GetChildren()) do
			if v:IsA("BloomEffect") or v:IsA("ColorCorrectionEffect") or v:IsA("SunRaysEffect") then
				v:Destroy();
			end
		end
	end
end
	
if settings.TracersLength > 2048 then
	settings.TracersLength = 2048
end

if settings.CHAMSLength > 2048 then
	settings.CHAMSLength = 2048
end

function GetSizeOfObject(Obj)
	if Obj:IsA("BasePart") then
		return Obj.Size
	elseif Obj:IsA("Model") then
		return Obj:GetExtentsSize()
	end
end

function GetTeamColor(Plr)
	if Plr == nil then return nil end
	if not Plr:IsA("Player") then
		return nil
	end
	local PickedColor = settings.Colors.Enemy

	if Plr ~= nil then
		if game.PlaceId == 606849621 then
			if settings.Colors.ColorOverride == nil then
				if not settings.FreeForAll then
					if MyPlr.Team ~= nil and Plr.Team ~= nil then
						if settings.FriendList[Plr.Name] == nil then
							if MyPlr.Team.Name == "Prisoner" then
								if Plr.Team == MyPlr.Team or Plr.Team.Name == "Criminal" then
									PickedColor = settings.Colors.Ally
								else
									PickedColor = settings.Colors.Enemy
								end
							elseif MyPlr.Team.Name == "Criminal" then
								if Plr.Team == MyPlr.Team or Plr.Team.Name == "Prisoner" then
									PickedColor = settings.Colors.Ally
								else
									PickedColor = settings.Colors.Enemy
								end
							elseif MyPlr.Team.Name == "Police" then
								if Plr.Team == MyPlr.Team then
									PickedColor = settings.Colors.Ally
								else
									if Plr.Team.Name == "Criminal" then
										PickedColor = settings.Colors.Enemy
									elseif Plr.Team.Name == "Prisoner" then
										PickedColor = settings.Colors.Neutral
									end
								end
							end
						else
							PickedColor = settings.Colors.Friend
						end
					end
				else
					if settings.FriendList[Plr.Name] ~= nil then
						PickedColor = settings.Colors.Friend
					else
						PickedColor = settings.Colors.Enemy
					end
				end
			else
				PickedColor = settings.Colors.ColorOverride
			end
		elseif game.PlaceId == 155615604 then
			if settings.Colors.ColorOverride == nil then
				if MyPlr.Team ~= nil and Plr.Team ~= nil then
					if settings.FriendList[Plr.Name] == nil then
						if MyPlr.Team.Name == "Inmates" then
							if Plr.Team.Name == "Inmates" then
								PickedColor = settings.Colors.Ally
							elseif Plr.Team.Name == "Guards" or Plr.Team.Name == "Criminals" then
								PickedColor = settings.Colors.Enemy
							else
								PickedColor = settings.Colors.Neutral
							end
						elseif MyPlr.Team.Name == "Guards" then
							if Plr.Team.Name == "Inmates" then
								PickedColor = settings.Colors.Neutral
							elseif Plr.Team.Name == "Criminals" then
								PickedColor = settings.Colors.Enemy
							elseif Plr.Team.Name == "Guards" then
								PickColor = settings.Colors.Ally
							end
						elseif MyPlr.Team.Name == "Criminals" then
							if Plr.Team.Name == "Inmates" then
								PickedColor = settings.Colors.Ally
							elseif Plr.Team.Name == "Guards" then
								PickedColor = settings.Colors.Enemy
							else
								PickedColor = settings.Colors.Neutral
							end
						end
					else
						PickedColor = settings.Colors.Friend
					end
				end
			else
				PickedColor = settings.Colors.ColorOverride
			end
		elseif game.PlaceId == 746820961 then
			if settings.Colors.ColorOverride == nil then
				if MyPlr:FindFirstChild("TeamC") and Plr:FindFirstChild("TeamC") then
					if Plr.TeamC.Value == MyPlr.TeamC.Value then
						PickedColor = settings.Colors.Ally
					else
						PickedColor = settings.Colors.Enemy
					end
				end
			else
				PickedColor = settings.Colors.ColorOverride
			end
		elseif game.PlaceId == 1382113806 then
			if settings.Colors.ColorOverride == nil then
				if MyPlr:FindFirstChild("role") and Plr:FindFirstChild("role") then
					if MyPlr.role.Value == "assassin" then
						if Plr.role.Value == "target" then
							PickedColor = settings.Colors.Enemy
						elseif Plr.role.Value == "guard" then
							PickedColor = Color3.new(1, 135 / 255, 0)
						else
							PickedColor = settings.Colors.Neutral
						end
					elseif MyPlr.role.Value == "target" then
						if Plr.role.Value == "guard" then
							PickedColor = settings.Colors.Ally
						elseif Plr.role.Value == "assassin" then
							PickedColor = settings.Colors.Enemy
						else
							PickedColor = settings.Colors.Neutral
						end
					elseif MyPlr.role.Value == "guard" then
						if Plr.role.Value == "target" then
							PickedColor = settings.Colors.Friend
						elseif Plr.role.Value == "guard" then
							PickedColor = settings.Colors.Ally
						elseif Plr.role.Value == "assassin" then
							PickedColor = settings.Colors.Enemy
						else
							PickedColor = settings.Colors.Neutral
						end
					else
						if MyPlr.role.Value == "none" then
							PickedColor = settings.Colors.Neutral
						end
					end
				end
			else
				PickedColor = settings.Colors.ColorOverride
			end
		elseif game.PlaceId == 1072809192 then
			if MyPlr:FindFirstChild("Backpack") and Plr:FindFirstChild("Backpack") then
				if MyPlr.Backpack:FindFirstChild("Knife") or MyChar:FindFirstChild("Knife") then
					if Plr.Backpack:FindFirstChild("Revolver") or Plr.Character:FindFirstChild("Revolver") then
						PickedColor = settings.Colors.Enemy
					else
						PickedColor = Color3.new(1, 135 / 255, 0)
					end
				elseif MyPlr.Backpack:FindFirstChild("Revolver") or MyChar:FindFirstChild("Revolver") then
					if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
						PickedColor = settings.Colors.Enemy
					elseif Plr.Backpack:FindFirstChild("Revolver") or Plr.Character:FindFirstChild("Revolver") then
						PickedColor = settings.Colors.Enemy
					else
						PickedColor = settings.Colors.Ally
					end
				else
					if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
						PickedColor = settings.Colors.Enemy
					elseif Plr.Backpack:FindFirstChild("Revolver") or Plr.Character:FindFirstChild("Revolver") then
						PickedColor = settings.Colors.Ally
					else
						PickedColor = settings.Colors.Neutral
					end
				end
			end
		elseif game.PlaceId == 142823291 or game.PlaceId == 1122507250 then
			if MyPlr:FindFirstChild("Backpack") and Plr:FindFirstChild("Backpack") then
				if MyPlr.Backpack:FindFirstChild("Knife") or MyChar:FindFirstChild("Knife") then
					if (Plr.Backpack:FindFirstChild("Gun") or Plr.Backpack:FindFirstChild("Revolver")) or (Plr.Character:FindFirstChild("Gun") or Plr.Character:FindFirstChild("Revolver")) then
						PickedColor = settings.Colors.Enemy
					else
						PickedColor = Color3.new(1, 135 / 255, 0)
					end
				elseif (MyPlr.Backpack:FindFirstChild("Gun") or MyPlr.Backpack:FindFirstChild("Revolver")) or (MyChar:FindFirstChild("Gun") or MyChar:FindFirstChild("Revolver")) then
					if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
						PickedColor = settings.Colors.Enemy
					else
						PickedColor = settings.Colors.Ally
					end
				else
					if Plr.Backpack:FindFirstChild("Knife") or Plr.Character:FindFirstChild("Knife") then
						PickedColor = settings.Colors.Enemy
					elseif (Plr.Backpack:FindFirstChild("Gun") or Plr.Backpack:FindFirstChild("Revolver")) or (Plr.Character:FindFirstChild("Gun") or Plr.Character:FindFirstChild("Revolver")) then
						PickedColor = settings.Colors.Ally
					else
						PickedColor = settings.Colors.Neutral
					end
				end
			end
		elseif game.PlaceId == 379614936 then
			if settings.Colors.ColorOverride == nil then
				if not settings.FriendList[Plr.Name] then
					local targ = MyPlr:FindFirstChild("PlayerGui"):FindFirstChild("ScreenGui"):FindFirstChild("UI"):FindFirstChild("Target"):FindFirstChild("Img"):FindFirstChild("PlayerText")
					if targ then
						if Plr.Name:lower() == targ.Text:lower() then
							PickedColor = settings.Colors.Enemy
						else
							PickedColor = settings.Colors.Neutral
						end
					else
						PickedColor = settings.Colors.Neutral
					end
				else
					PickedColor = settings.Colors.Friend
				end
			else
				PickedColor = settings.Colors.ColorOverride
			end
		elseif game.PlaceId == 983224898 then
			if (tick() - wildrevolvertick) > 10 or wildrevolverteamdata == nil then
				wildrevolverteamdata = RepStor.Functions.RequestGameData:InvokeServer()
				wildrevolvertick = tick()
				return settings.Colors.Neutral
			end
			local succ = pcall(function()
				if wildrevolverteamdata[Plr.Name] ~= nil then
					if settings.Colors.ColorOverride == nil then
						if not settings.FriendList[Plr.Name] then
							if wildrevolverteamdata[Plr.Name]["TeamName"] == wildrevolverteamdata[MyPlr.Name]["TeamName"] then
								PickedColor = settings.Colors.Ally
							else
								PickedColor = settings.Colors.Enemy
							end
						else
							PickedColor = settings.Colors.Friend
						end
					else
						PickedColor = settings.Colors.ColorOverride
					end
				else
					PickedColor = settings.Colors.Neutral
				end
			end)
			if not succ then
				wildrevolverteamdata = RepStor.Functions.RequestGameData:InvokeServer()
				wildrevolvertick = tick()
				return settings.Colors.Neutral
			end
		else
			if settings.Colors.ColorOverride == nil then
				if not settings.FreeForAll then
					if MyPlr.Team ~= Plr.Team and not settings.FriendList[Plr.Name] then
						PickedColor = settings.Colors.Enemy
					elseif MyPlr.Team == Plr.Team and not settings.FriendList[Plr.Name] then
						PickedColor = settings.Colors.Ally
					else
						PickedColor = settings.Colors.Friend
					end
				else
					if settings.FriendList[Plr.Name] ~= nil then
						PickedColor = settings.Colors.Friend
					else
						PickedColor = settings.Colors.Enemy
					end
				end
			else
				PickedColor = settings.Colors.ColorOverride
			end
		end
	end

	return PickedColor
end

function UpdateTracer(Plr)
	if settings.TracersEnabled then
		if MyChar then
			local MyTor = MyChar:FindFirstChild("HumanoidRootPart")
			local GetTor = TracerData[Plr.Name]
			if MyTor and GetTor ~= nil and GetTor.Parent ~= nil then
				local Dist = (MyTor.Position - GetTor.Position).magnitude
				if (Dist < settings.TracersLength and not settings.Blacklist[Plr.Name]) and not (MyChar:FindFirstChild("InVehicle") or GetTor.Parent:FindFirstChild("InVehicle")) then
					if not settings.PlaceTracersUnderCharacter then
						local R = MyCam:ScreenPointToRay(MyCam.ViewportSize.X / 2, MyCam.ViewportSize.Y, 0)
						Dist = (R.Origin - (GetTor.Position - Vector3.new(0, 3, 0))).magnitude
						Tracers[Plr.Name].Transparency = 1
						Tracers[Plr.Name].Size = Vector3.new(0.05, 0.05, Dist)
						Tracers[Plr.Name].CFrame = CFrame.new(R.Origin, (GetTor.Position - Vector3.new(0, 4.5, 0))) * CFrame.new(0, 0, -Dist / 2)
						Tracers[Plr.Name].BrickColor = BrickColor.new(GetTeamColor(Plr))
						Tracers[Plr.Name].BoxHandleAdornment.Transparency = 0
						Tracers[Plr.Name].BoxHandleAdornment.Size = Vector3.new(0.001, 0.001, Dist)
						Tracers[Plr.Name].BoxHandleAdornment.Color3 = GetTeamColor(Plr)
					else
						Dist = (MyTor.Position - (GetTor.Position - Vector3.new(0, 3, 0))).magnitude
						Tracers[Plr.Name].Transparency = 1
						Tracers[Plr.Name].Size = Vector3.new(0.3, 0.3, Dist)
						Tracers[Plr.Name].CFrame = CFrame.new(MyTor.Position - Vector3.new(0, 3, 0), (GetTor.Position - Vector3.new(0, 4.5, 0))) * CFrame.new(0, 0, -Dist / 2)
						Tracers[Plr.Name].BrickColor = BrickColor.new(GetTeamColor(Plr))
						Tracers[Plr.Name].BoxHandleAdornment.Transparency = 0
						Tracers[Plr.Name].BoxHandleAdornment.Size = Vector3.new(0.05, 0.05, Dist)
						Tracers[Plr.Name].BoxHandleAdornment.Color3 = GetTeamColor(Plr)
					end
				else
					Tracers[Plr.Name].Transparency = 1
					Tracers[Plr.Name].BoxHandleAdornment.Transparency = 1
				end
			end
		end
	end
end

function RemoveTracers(Plr)
	local Find = Tracers:FindFirstChild(Plr.Name)
	if Find then
		Find:Destroy()
	end
end

function CreateTracers(Plr)
	local Find = Tracers:FindFirstChild(Plr.Name)
	if not Find then
		local P = Instance.new("Part")
		P.Name = Plr.Name
		P.Material = "Neon"
		P.Transparency = 1
		P.Anchored = true
		P.Locked = true
		P.CanCollide = false
		local B = Instance.new("BoxHandleAdornment", P)
		B.Adornee = P
		B.Size = GetSizeOfObject(P)
		B.AlwaysOnTop = true
		B.ZIndex = 5
		B.Transparency = 0
		B.Color3 = GetTeamColor(Plr) or settings.Colors.Neutral
		P.Parent = Tracers

		coroutine.resume(coroutine.create(function()
			while Tracers:FindFirstChild(Plr.Name) do
				UpdateTracer(Plr)
				Run.RenderStepped:wait()
			end
		end))
	end
end

function FindCham(Obj)
	for i, v in next, ItemChams:GetChildren() do
		if v.className == "ObjectValue" then
			if v.Value == Obj then
				return v.Parent
			end
		end
	end

	return nil
end

function UpdateChams(Obj)
	if Obj == nil then return end

	if Obj:IsA("Player") then
		local Find = PlayerChams:FindFirstChild(Obj.Name)
		local GetChar = Obj.Character

		local Trans = 0
		if GetChar and MyChar then
			local GetHead = GetChar:FindFirstChild("Head")
			local GetTor = GetChar:FindFirstChild("HumanoidRootPart")
			local MyHead = MyChar:FindFirstChild("Head")
			local MyTor = MyChar:FindFirstChild("HumanoidRootPart")
			if GetHead and GetTor and MyHead and MyTor then
				if (MyTor.Position - GetTor.Position).magnitude > settings.CHAMSLength or settings.Blacklist[Obj.Name] then
					Trans = 1
				else
					--local MyCharStuff = MyChar:GetDescendants()
					local Ray = Ray.new(MyCam.CFrame.p, (GetTor.Position - MyCam.CFrame.p).unit * 2048)
					local part = workspace:FindPartOnRayWithIgnoreList(Ray, {MyChar})
					if part ~= nil then
						if part:IsDescendantOf(GetChar) then
							Trans = 0.9
						else
							Trans = 0
						end
					end
				end
			end
		end

		if Find then
			for i, v in next, Find:GetChildren() do
				if v.className ~= "ObjectValue" then
					v.Color3 = GetTeamColor(Obj) or settings.Colors.Neutral
					v.Transparency = Trans
				end
			end
		end
	end
end

function RemoveChams(Obj)
	if Obj ~= nil then
		local IsPlr = Obj:IsA("Player")
		local UseFolder = ItemChams
		if IsPlr then UseFolder = PlayerChams end

		local FindC = UseFolder:FindFirstChild(tostring(Obj)) or FindCham(Obj)
		if FindC then
			FindC:Destroy()
		end
	end
end

function CreateChams(Obj)
	if Obj ~= nil then
		local IsPlr = Obj:IsA("Player")
		local UseFolder = ItemChams
		local Crap = nil
		local GetTor = nil
		local t = tick()
		if IsPlr then
			Obj = Obj.Character
			UseFolder = PlayerChams
		end
		if Obj == nil then return end
		GetTor = Obj:FindFirstChild("HumanoidRootPart") or Obj:WaitForChild("HumanoidRootPart")
		if IsPlr then Crap = Obj:GetChildren() else Crap = Obj:GetDescendants() end

		local FindC = ((IsPlr) and UseFolder:FindFirstChild(Obj.Name)) or FindCham(Obj)
		if not FindC then
			FindC = Instance.new("Folder", UseFolder)
			FindC.Name = Obj.Name
			local ObjVal = Instance.new("ObjectValue", FindC)
			ObjVal.Value = Obj
		end

		for _, P in next, Crap do
			if P:IsA("PVInstance") and P.Name ~= "HumanoidRootPart" then
				local Box = Instance.new("BoxHandleAdornment")
				Box.Size = GetSizeOfObject(P)
				Box.Name = "Cham"
				Box.Adornee = P
				Box.AlwaysOnTop = true
				Box.ZIndex = 5
				Box.Transparency = 0
				Box.Color3 = ((IsPlr) and GetTeamColor(Plrs:GetPlayerFromCharacter(Obj))) or settings.Colors.Neutral
				Box.Parent = FindC
			end
		end
	end
end

function CreateMobESPChams()
	local mobspawn = { }

	for i, v in next, workspace:GetDescendants() do
		local hum = v:FindFirstChildOfClass("Humanoid")
		if hum and not Plrs:GetPlayerFromCharacter(hum.Parent) and FindCham(v) == nil and FindESP(v) == nil then
			mobspawn[tostring(v.Parent)] = v.Parent
			if settings.CHAMSEnabled and settings.MobChams then
				CreateChams(v)
			end
			if settings.ESPEnabled and settings.MobESP then
				CreateESP(v)
			end
		end
	end

	if settings.Mob_ESP_CHAMS_Ran_Once == false then
		for i, v in next, mobspawn do
			v.ChildAdded:connect(function(Obj)
				if settings.MobChams then
					local t = tick()
					local GetHum = Obj:FindFirstChildOfClass("Humanoid")
					if GetHum == nil then
						repeat
							GetHum = Obj:FindFirstChildOfClass("Humanoid")
							wait()
						until GetHum ~= nil or (tick() - t) >= 10
					end
					if GetHum == nil then return end

					CreateChams(Obj)
				end

				if settings.MobESP then
					local t = tick()
					local GetHum = Obj:FindFirstChildOfClass("Humanoid")
					if GetHum == nil then
						repeat
							GetHum = Obj:FindFirstChildOfClass("Humanoid")
							wait()
						until GetHum ~= nil or (tick() - t) >= 10
					end
					if GetHum == nil then return end

					CreateESP(Obj)
				end
			end)
		end

		settings.Mob_ESP_CHAMS_Ran_Once = true
	end
end
	
-- frame adjust shit dont touch
function calculatetestToScale(dir,scale)
    local num = 31;
    local scaleToFrame = scale;
    for i,v in pairs(dir:GetChildren()) do
        if v.ClassName ~= "UIListLayout" then
            num = num + scaleToFrame;
        end
    end
    return num;
end

game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"].Options.Size = UDim2.new(0, 271,0, calculatetestToScale(game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"].Options,31))
game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"].Size = UDim2.new(0, 271,0, calculatetestToScale(game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"],46))	
game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection.Size = UDim2.new(0, 271,0, calculatetestToScale(game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection,50))	

	
-- toggle stuff
	-- visuals
game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Title.toggle.MouseButton1Down:Connect(function()
	settings.visualopen = not settings.visualopen
	if settings.visualopen then
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals"):TweenSize(UDim2.new(0, 271,0, 488), "Out", "Linear", .2, true)
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild('Visuals').Line.Position = UDim2.new(0.001, 0,0.083, 0)
		--tweening()
	else
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals"):TweenSize(UDim2.new(0, 271,0, 43), "Out", "Linear", .2, true)
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild('Visuals').Line.Position = UDim2.new(-0.003, 0,0.878, 0)
		--tweening()
	end
end)
	
game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"].Namee.toggle.MouseButton1Down:Connect(function()
	settings.testopen = not settings.testopen
	if settings.testopen then
			game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"].Options:TweenSize(UDim2.new(0, 271,0, calculatetestToScale(game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"].Options,31)), "Out", "Linear", .2, true)
			game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"]:TweenSize(UDim2.new(0, 271,0, calculatetestToScale(game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"],46)), "Out", "Linear", .2, true)
		--tweening()
	else
			game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"].Options:TweenSize(UDim2.new(0, 271,0, 0), "Out", "Linear", .2, true)
			game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"]:TweenSize(UDim2.new(0, 271,0, 30), "Out", "Linear", .2, true)
		--tweening()
	end
end)
	
-- character stuff
game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Title.toggle.MouseButton1Down:Connect(function()
	settings.characteropen = not settings.characteropen
	if settings.characteropen then
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character"):TweenSize(UDim2.new(0, 271,0, 488), "Out", "Linear", .2, true)
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild('Character').Line.Position = UDim2.new(0.001, 0,0.083, 0)
		--tweening()
	else
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character"):TweenSize(UDim2.new(0, 271,0, 40), "Out", "Linear", .2, true)
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild('Character').Line.Position = UDim2.new(0.001, 0,0.916, 0)
		--tweening()
	end
end)


-- main

--visual shit
	
game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["FullBright"].Toggle.MouseButton1Down:Connect(function()
	settings.fullbright = not settings.fullbright;
	fullbright();
end)
	
game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Visuals").Selection["ESP Options"].Options.Chams.MouseButton1Down:Connect(function()
	settings.CHAMSEnabled = not settings.CHAMSEnabled
	if settings.CHAMSEnabled then
		for _, v in next, Plrs:GetPlayers() do
			if v ~= MyPlr then
				if settings.CharAddedEvent[v.Name] == nil then
					settings.CharAddedEvent[v.Name] = v.CharacterAdded:connect(function(Char)
						if settings.CHAMSEnabled then
							RemoveChams(v)
							CreateChams(v)
						end
						repeat wait() until Char:FindFirstChild("HumanoidRootPart")
						TracerMT[v.Name] = Char.HumanoidRootPart
					end)
				end
				RemoveChams(v)
				CreateChams(v)
			end
		end
		CreateMobESPChams()
	else
		PlayerChams:ClearAllChildren()
		ItemChams:ClearAllChildren()
	end
end)

-- character shit
game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Super Jump"].Toggle.MouseButton1Down:Connect(function()
	settings.superjump = not settings.superjump
	if settings.superjump then
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = 500
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Super Jump"].Toggle.Text = "ON"
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Super Jump"].Toggle.TextColor3 = settings.on
	else
		game.Players.LocalPlayer.Character.Humanoid.JumpPower = 50
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Super Jump"].Toggle.Text = "OFF"
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Super Jump"].Toggle.TextColor3 = settings.off
	end
	warn(game.Players.LocalPlayer.Name.."'s jumpower is; "..game.Players.LocalPlayer.Character.Humanoid.JumpPower)
end)

game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Super Speed"].Toggle.MouseButton1Down:Connect(function()
	settings.superspeed = not settings.superspeed
	if settings.superspeed then
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 150
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Super Speed"].Toggle.Text = "ON"
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Super Speed"].Toggle.TextColor3 = settings.on
	else
		game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Super Speed"].Toggle.Text = "OFF"
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Super Speed"].Toggle.TextColor3 = settings.off
	end
	warn(game.Players.LocalPlayer.Name.."'s walkspeed is; "..game.Players.LocalPlayer.Character.Humanoid.WalkSpeed)
end)

game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Fly"].Toggle.MouseButton1Down:Connect(function()
	settings.vfly = not settings.vfly
	if settings.vfly then
		warn("fly enabled")
		sFLY()
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Fly"].Toggle.Text = "ON"
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Fly"].Toggle.TextColor3 = settings.on
	else
		warn("fly disabled")
		NOFLY()
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Fly"].Toggle.Text = "OFF"
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Fly"].Toggle.TextColor3 = settings.off
	end
end)
	
game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Vehicle Fly"].Toggle.MouseButton1Down:Connect(function()
	settings.vfly = not settings.vfly
	if settings.vfly then
		warn("vfly enabled")
		sFLY(true)
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Vehicle Fly"].Toggle.Text = "ON"
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Vehicle Fly"].Toggle.TextColor3 = settings.on
	else
		warn("vfly disabled")
		NOFLY()
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Vehicle Fly"].Toggle.Text = "OFF"
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Vehicle Fly"].Toggle.TextColor3 = settings.off
	end
end)

game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Noclip"].Toggle.MouseButton1Down:Connect(function()
	settings.noclip = not settings.noclip
	if settings.noclip then
		warn("noclip enabled")
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Noclip"].Toggle.Text = "ON"
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Noclip"].Toggle.TextColor3 = settings.on
		local function NoclipLoop()
	      if settings.noclip == true and game.Players.LocalPlayer.Character ~= nil then
	          for _, child in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
	          		if child:IsA("BasePart") and child.CanCollide == true then
	              		child.CanCollide = false
		          	  end
		        	end
		    	end
		    end
			Noclipping = game:GetService('RunService').Stepped:connect(NoclipLoop)
	else
		warn("noclip disabled")
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Noclip"].Toggle.Text = "OFF"
		game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["Noclip"].Toggle.TextColor3 = settings.off
			if Noclipping then
		      		Noclipping:Disconnect()
			end
		end
end)
	
	local maxval = math.floor(game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["WalkSpeed"].Scroller.CanvasPosition.X / (game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["WalkSpeed"].Scroller.CanvasSize.X.Offset - game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["WalkSpeed"].Scroller.AbsoluteWindowSize.X) * 150)
	game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["WalkSpeed"].Value.Text = tostring(maxval * 1);
	game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["WalkSpeed"].Value2.Text = "["..tostring(maxval * 1).."/150]";
game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["WalkSpeed"].Scroller.Changed:Connect(function(c) if (c ~= "CanvasPosition") then return end
	local maxval = math.floor(game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["WalkSpeed"].Scroller.CanvasPosition.X / (game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["WalkSpeed"].Scroller.CanvasSize.X.Offset - game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["WalkSpeed"].Scroller.AbsoluteWindowSize.X) * 150)
	game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["WalkSpeed"].Value.Text = tostring(maxval * 1);
	game.Players.LocalPlayer.PlayerGui["Vect0rs hub"].mainframe:WaitForChild("Character").Selection["WalkSpeed"].Value2.Text = "["..tostring(maxval * 1).."/150]";
	game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = maxval * 1
	print(game.Players.LocalPlayer.Character.Humanoid.WalkSpeed)
end)
end;


-- loader --
createtemplates();
colourshit();
createuioptions();
mousebuttonscriptshit();
